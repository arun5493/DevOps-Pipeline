- include_vars: mongoVars.yml
- include_vars: paths.yml

- name: Install required packages
  apt:
    pkg: '{{item}}'
    state: present
    update_cache: yes
  become: yes
  with_items:
    - npm
    - nodejs
    - nodejs-legacy
    - nginx
    - mongodb
    - python3-pip
    - python-pip

- name: Ensuring previous clone isn't present
  file:
    state: absent
    path: '{{checkbox_path}}'

- name: Cloning Github repo
  git: repo=https://github.com/chrisparnin/checkbox.io.git clone=yes dest={{checkbox_path}}

- name: Install Forever node package
  npm:
    name: forever
    state: present
    global: yes
  become: yes

- name: Install required node packages
  npm:
    path: "{{checkbox_path}}/server-side/site"

- name: Copy nginx.conf from repo /etc/nginx
  copy: remote_src=true src="{{checkbox_path}}/local-conf/nginx.conf" dest=/etc/nginx/nginx.conf
  become: yes
# - name: Copy nginx.conf from repo to host
#   fetch:
#     src: "{{checkbox_path}}/local-conf/nginx.conf"
#     dest: "/tmp/nginx.conf"
#     flat: yes
#
# - name: Copy nginx.conf from host to remote /etc/nginx
#   copy:
#     src: "/tmp/nginx.conf"
#     dest: /etc/nginx/nginx.conf
#   become: yes

- name: Modify the server root in the default file
  replace:
    path: "{{checkbox_path}}/local-conf/default"
    regexp: "root (.)+;"
    replace: "root {{checkbox_path}}/public_html/;"

# - name: Fetch default file from repo to host
#   fetch:
#     src: "{{checkbox_path}}/local-conf/default"
#     dest: "/tmp/default"
#     flat: yes
#
# - name: Copy default file to remote nginx folder
#   copy:
#     src: "/tmp/default"
#     dest: /etc/nginx/sites-available/default
#   become: yes

- name: Copy default file from repo to nginx folder
  copy: remote_src=true src="{{checkbox_path}}/local-conf/default" dest=/etc/nginx/sites-available/default
  become: yes


- name: Install python package for mongodb
  pip:
    name: pymongo
    state: present
  become: yes

- name: Add a new mongodb user
  mongodb_user:
    database: admin
    name: "{{mongo_user}}"
    password: "{{mongo_password}}"
    state: present


- name: Restart nginx
  service:
   name: nginx
   state: restarted
  become: yes

- name: Restart mongoDb
  service:
   name: mongodb
   state: restarted
  become: yes

- name: Running server.js
  shell:  cd {{checkbox_path}}/server-side/site/; forever stopall; forever start server.js
  environment:
    MONGO_PORT: "{{mongo_port}}"
    MONGO_IP: "{{mongo_ip}}"
    MONGO_USER: "{{mongo_user}}"
    MONGO_PASSWORD: "{{mongo_password}}"
    MAIL_USER: "{{mail_user}}"
    MAIL_PASSWORD: "{{mail_password}}"
    MAIL_SMTP: "{{mail_smtp}}"
