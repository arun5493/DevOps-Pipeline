const fs = require('fs')
const path = require('path');
const execSync = require('child_process').execSync;
const faker   = require("faker");
const Random = require("random-js");
faker.locale  = "en";

var fuzzCount = {{number_of_fuzz}};

var javaFiles = [ ];
var fileCount = 0;

var getJavaFiles = function (dir) {
	childList = fs.readdirSync(dir)
	childList.forEach(function(file) {
		if (!(fs.statSync(dir + '/' + file).isDirectory())) {
			file = dir + '/' + file;
			if (file.split('.')[1] == "java") {
				//console.log(file);
				javaFiles[fileCount++] = file;
			}
		}
		else {
			getJavaFiles(dir + '/' + file);
		}
	});
	//console.log("======================================");
	return javaFiles;
}

var random = function () {
       return new Random(Random.engines.mt19937().autoSeed())
}

var fuzzer = function(filePath)  {
	var lines = fs.readFileSync(filePath, 'utf8').split(/\r?\n/)
	fs.writeFileSync(filePath, '', {encoding:'utf8'});
	lines.forEach(function(line){
		if(!line.match(/@/)){
			if(!line.match(/case/) && line.match('"((\\"|[^"])+0(\\"|[^"])*|(\\"|[^"])*0(\\"|[^"])+)"'))
				line = line.replace('0', '1')
			else if(!line.match(/case/) && line.match('"((\\"|[^"])+0(\\"|[^"])*|(\\"|[^"])*1(\\"|[^"])+)"'))
				line = line.replace('1', '0')

			if(line.match(/while/))
			{
				if(random().bool(0.5))
					line = line.replace('<', '>')
				else
					line = line.replace('>', '<')
			}
			if(!line.match(/null/))
			{
				if(random().bool(0.5))
					line = line.replace('==', '!=')
				else
					line = line.replace('!=', '==')
			}
			if(random().bool(0.5) && !line.match(/\\/) && !line.match(/ontext/) && !line.match(/jdbc/))
				line = line.replace(/"([^"]*)"/g, '"'+ faker.random.word()+'"');
		}
		if(line != '\r')
			line += '\n';
		fs.appendFileSync(filePath, line);
	});
}

var fuzzFiles = function(numberOfIterations) {
    var fuzzingFiles = getJavaFiles('src/main/java/edu/ncsu/csc/itrust2/');
    for (var i = 0; i < numberOfIterations; i++) {
		for (var j = 0; j < fileCount; j++){
			fuzzer(fuzzingFiles[j]);
		}
		execSync(`git add .`);
		execSync(`git commit -m "Fuzzer commit"`)
		execSync(`java -jar /tmp/jenkins-cli.jar -s http://{{inventory_hostname}}:8080/ build iTrust_Fuzzer -s --username {{jenkins_url_username}} --password {{jenkins_url_password}}|| exit 0`)
		execSync(`git reset --hard HEAD~1`)
		console.log("Fuzz #" + (i+1) + " completed successfully")
    }
}

fuzzFiles (fuzzCount);