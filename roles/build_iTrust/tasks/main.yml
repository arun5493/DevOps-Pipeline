- name: Set MySQL root password before installing
  become: yes
  debconf: name='mysql-server' question='mysql-server/root_password' value='{{mysql_password | quote}}' vtype='password'

- name: Confirm MySQL root password before installing
  become: yes
  debconf: name='mysql-server' question='mysql-server/root_password_again' value='{{mysql_password | quote}}' vtype='password'

- name: Install packages for iTrust
  apt: pkg={{ item }} state=present
  with_items:
   - mysql-server
   - maven
  become: yes

- name: "Skip grant tables"
  template: src=mysqld.cnf.template dest=/etc/mysql/mysql.conf.d/mysqld.cnf
  become: yes

- name: Restart MySQL after installation
  service:
   name: mysql
   state: started

- name: Wait for MySQL to start on default port
  wait_for:
   port: "{{mysql_default_port}}"

- name: Copy the itrust config file
  template:
    src: itrust_config.xml.j2
    dest: "{{project_path}}/roles/build_iTrust/templates/itrust_config.xml"
  become: yes
  
- name: Copy the fuzzer config file
  template:
    src: fuzzer_config.xml.j2
    dest: "{{project_path}}/roles/build_iTrust/templates/fuzzer_config.xml"
  become: yes

- name: Fetch itrust_config from jenkins server to local machine
  fetch:
    src: "{{project_path}}/roles/build_iTrust/templates/itrust_config.xml"
    dest: "{{project_path}}/roles/build_iTrust/templates/"
    flat: yes

- name: Fetch fuzzer_config from jenkins server to local machine
  fetch:
    src: "{{project_path}}/roles/build_iTrust/templates/fuzzer_config.xml"
    dest: "{{project_path}}/roles/build_iTrust/templates/"
    flat: yes
    
- jenkins_job:
   config: "{{ lookup('file', '../templates/itrust_config.xml') }}"
   name: iTrust_Build
   password: "{{jenkins_url_password}}"
   url: http://{{inventory_hostname}}:8080
   user: "{{jenkins_url_username}}"

- jenkins_job:
   config: "{{ lookup('file', '../templates/fuzzer_config.xml') }}"
   name: iTrust_Fuzzer
   password: "{{jenkins_url_password}}"
   url: http://{{inventory_hostname}}:8080
   user: "{{jenkins_url_username}}"

- name: Copy the fuzzer code into jenkins workspace
  template:
    src: fuzz.js.j2
    dest: "/tmp/fuzz.js"
  become: yes

- name: Copy the test prioritization code to jenkins server
  template:
    src: FuzzAnalysis.java  
    dest: "/var/lib/jenkins/jobs/iTrust_Fuzzer/builds/"
  become: yes
  
- name: Invoking iTrust build
  become: yes
  shell: "java -jar /tmp/jenkins-cli.jar -s http://{{inventory_hostname}}:8080/ build iTrust_Build --username {{jenkins_url_username}} --password {{jenkins_url_password}} "
